package retrieval;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;

/**
 * This application is an interface between the evaluation results generated by Perl and a Matlab readable file
 * 
 * The .txt file is the Perl generated evaluation results, including precision and recall of each query, 
 * as well as the average precision and recall.
 * 
 * The .csv file is the finally generated Matlab readable file.
 * 
 * @author Zheyun Feng -fengzhey@msu.edu
 *
 */

public class EvaluationR {
	
	public static void main(String[] args) throws Exception
	{
		String summary_dir = "C:/zfeng/TrecJava/data/484/results/summy/okapi_wordnet_0.2.txt";
		String summary_total= "C:/zfeng/TrecJava/data/484/results/matrix/okapi_wordnet_0.2.csv";
		int num_query = 50;
		
		BufferedReader sumFile =  new BufferedReader(new FileReader( summary_dir ));
//		FileWriter sumMatrix = new FileWriter( summary_matrix );
		FileWriter sumT = new FileWriter( summary_total );
		
		String sumstr;
		String[] sumArray;
		for(int i=0; i<num_query;i++)
		{
			sumstr = sumFile.readLine();
//			sumArray = sumstr.split(":");
//			sumMatrix.append(sumArray[1]); // Topic
			
			for (int j=0; j<3; j++)
			{
				sumstr = sumFile.readLine();
//				sumArray = sumstr.split("=");
//				sumMatrix.append(","+sumArray[1]); // num of relevant doc, num of retrieved relevant doc,average pre				
			}
			
			sumstr = sumFile.readLine(); //interpolated precision at recall			
			for (int j=0; j<11; j++)
			{
				sumstr = sumFile.readLine();
//				sumArray = sumstr.split("=");
//				sumMatrix.append(","+sumArray[1]); // pre at recall				
			}
			
			sumstr = sumFile.readLine(); //non-interpolated precision at recall			
			for (int j=0; j<9; j++)
			{
				sumstr = sumFile.readLine();
//				sumArray = sumstr.split("=");
//				sumMatrix.append(","+sumArray[1]); // pre at recall				
			}
			
			sumstr = sumFile.readLine();
//			sumArray = sumstr.split(":");
//			sumMatrix.append(sumArray[1] + "\n" ); // breakeven precision
			
			sumstr = sumFile.readLine();		
		}
//		sumMatrix.close();
		
		// Deal with the summary
		sumstr = sumFile.readLine();
			
		for (int j=0; j<3; j++)
		{
			sumstr = sumFile.readLine();
			sumArray = sumstr.split("=");
			sumT.append(sumArray[1]+","); // map, num of relevant, num of retrieved relevant				
		}
			
		sumstr = sumFile.readLine(); //interpolated precision at recall			
		for (int j=0; j<11; j++)
		{
			sumstr = sumFile.readLine();
			sumArray = sumstr.split("=");
			sumT.append(sumArray[1]+","); // pre at recall				
		}
			
		sumstr = sumFile.readLine(); //non-interpolated precision at recall			
		for (int j=0; j<9; j++)
		{
			sumstr = sumFile.readLine();
			sumArray = sumstr.split("=");
			sumT.append(sumArray[1]+","); // pre at recall				
		}
			
		sumstr = sumFile.readLine();
		sumArray = sumstr.split("=");
		sumT.append(sumArray[1] ); // breakeven precision
		
		sumT.close();
		sumFile.close();
		
	}

}
